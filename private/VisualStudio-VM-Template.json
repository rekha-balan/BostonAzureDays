{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "admin password for the VM. This is pulled from keyvault by param file reference"
      }
    },
    "osDiskStorageType": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "type": "String",
      "metadata": {
        "description": "type of storage to use for VM managed disks"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D4_v3",
      "allowedValues": [
        "Standard_D4_v3"
      ],
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "maxValue": 20,
      "metadata": {
        "description": "Number of VM instances to be created behind during resource loop"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "name for Availability Set to put VMs into"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "String to prefix the generation of the VM Name"
      }
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "virtualNetworkResourceGroup": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "DefaultNSG"
    }
  },
  "variables": {
    "resourceId": "[resourceGroup().id]",
    "imagePublisher": "MicrosoftVisualStudio",
    "imageOffer": "VisualStudio",
    "imageSku": "VS-2017-Ent-Latest-Win10-N",
    "vnetId": "[resourceid(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('SubnetName'))]",
    "networkInterfaceNamePrefix": "VNic",
    "_artifactsLocation": "https://raw.githubusercontent.com/lorax79/AzureDays/master/",
    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File', variables('_artifactsLocation'), 'install-bginfo.ps1')]"
  },
  "resources": [
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-winrm",
            "properties": {
              "priority": 2000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "5986",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "allow-https",
            "properties": {
              "priority": 3000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "allow-http",
            "properties": {
              "priority": 4000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "sku": {
        "name": "Aligned"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 5
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), copyindex(), variables('networkInterfaceNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[parameters('networkSecurityGroupName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('vmNamePrefix'), copyindex(), '-ipconfig')]",
            "properties": {
              "networkSecurityGroup": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "copy": {
        "count": "[parameters('numberOfInstances')]",
        "name": "virtualMachineLoop"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachines"
      },
      "dependsOn": [
        "nicLoop",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "OSProfile": {
            "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('imageSku')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(parameters('vmNamePrefix'), copyIndex(), 'osdisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('OsDiskStorageType')]"
              }
            },
            "dataDisks": [
              {
                "name": "[concat(parameters('vmNamePrefix'), copyIndex(), 'datadisk')]",
                "lun": 0,
                "diskSizeGB": 100,
                "createOption": "Empty",
                "caching": "ReadWrite"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), copyindex(), variables('networkInterfaceNamePrefix')))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": false
            }
          }
        },
      "resources": [

      ]
      }
  ]
}
